name: Build and Release Rust CLI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Install `cross`
      run: cargo install cross

    - name: Install target for Linux
      run: rustup target add x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu

    - name: Build for x86_64 Linux
      run: |
        cross build --release --target x86_64-unknown-linux-gnu
        ls -R target/x86_64-unknown-linux-gnu/release/

    - name: Build for aarch64 Linux
      run: |
        cross build --release --target aarch64-unknown-linux-gnu
        ls -R target/aarch64-unknown-linux-gnu/release/

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Install target for macOS
      run: rustup target add x86_64-apple-darwin aarch64-apple-darwin

    - name: Build for x86_64 macOS
      run: |
        cargo build --release --target x86_64-apple-darwin
        ls -R target/x86_64-apple-darwin/release/

    - name: Build for aarch64 macOS
      run: |
        cargo build --release --target aarch64-apple-darwin
        ls -R target/aarch64-apple-darwin/release/

  release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Extract version from Cargo.toml
      id: extract_version
      run: |
        VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: List files in target directory
      run: |
        ls -R target

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dino_cli_game
        path: |
          target/x86_64-unknown-linux-gnu/release/dino_cli_game
          target/aarch64-unknown-linux-gnu/release/dino_cli_game
          target/x86_64-apple-darwin/release/dino_cli_game
          target/aarch64-apple-darwin/release/dino_cli_game

    - name: Create Release
      id: create_release
      run: |
        echo "VERSION=${VERSION}"

        # Install GitHub CLI
        sudo apt-get update
        sudo apt-get install -y gh

        # Create the release
        gh release create "${VERSION}" \
          target/x86_64-unknown-linux-gnu/release/dino_cli_game \
          target/aarch64-unknown-linux-gnu/release/dino_cli_game \
          target/x86_64-apple-darwin/release/dino_cli_game \
          target/aarch64-apple-darwin/release/dino_cli_game \
          --title "Release ${VERSION}" \
          --notes "Release version ${VERSION} created on $(date +'%Y-%m-%d')"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}